buildscript {
	ext {
        springBootVersion = "${springBootVersion}"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.netflix.nebula:gradle-ospackage-plugin:4.4.0")
    }
}

plugins {
	// id "org.sonarqube" version "2.6"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

jar {
    baseName = 'ms_samplebootapp'
    version =  '1.0'
}

ext {
	jacocoVersion = '0.7.6.201602180812'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
	gradleVersion = '4.8'

}

dependencyManagement {
	imports {
		
	}
}

configurations {
	provided
}

sourceSets {
	main.compileClasspath += configurations.provided
	test.compileClasspath += configurations.provided
	test.runtimeClasspath += configurations.provided
}

dependencies {
	
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")	
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springOAuth2Version}")
	
	compile("org.springframework.boot:spring-boot-starter-test")
	compile("org.springframework.boot:spring-boot-devtools")
	
	compile("org.webjars:jquery:3.4.1")
	compile("org.webjars:bootstrap:4.3.1")
	compile("org.webjars:webjars-locator-core")
	
	compile("com.h2database:h2")
	
		
    testCompile("junit:junit")
}

jacoco {
	toolVersion = jacocoVersion
}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled true
		html.destination "$buildDir/reports/jacoco/html"
		xml.destination "$buildDir/reports/jacoco/xml"
		csv.destination "$buildDir/reports/jacoco/csv"
	}
}

jacocoTestReport.dependsOn test

test {
	ignoreFailures true
	jacoco {
		destinationFile = file ("$buildDir/jacoco/junitTest.exec")
	}
}

test.finalizedBy jacocoTestReport
